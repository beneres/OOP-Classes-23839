using System;namespace Squarefields{    class Program    {        static void Main(string[] args)        {            /*Create a class named Square that contains fields for area and the length of            a side and whose constructor requires a parameter for the length of one side of            a Square.The constructor assigns its parameter to the length of the Square’s side            field and calls a private method that computes the area field.Also include            read-only properties to get a Square’s side and area. In the main method            create an array of ten Square objects with sides that * have values of 1 through 10.            Display the values for each Square            */                        Console.WriteLine("Area and Side Length of Squares:\n\n");            Console.WriteLine("{0}\t{1}\t{2}", "*", "Side Length", "Area");            Square[] squares = new Square[11];            for (int i = 1; i < 10; i++)            {                squares[i] = new Square(i);                Square currentSquare = squares[i];                Console.WriteLine("{0}\t{1,11}\t{2,4}",                    i, currentSquare.SideLength, currentSquare.Area);            }            Console.Read();        }    }}______________________________________________________________________using System;namespace Squarefields{    public class Square    {        /*Create a class named Square that contains fields for area and the length of            a side and whose constructor requires a parameter for the length of one side of            a Square.The constructor assigns its parameter to the length of the Square’s side            field and calls a private method that computes the area field.Also include            read-only properties to get a Square’s side and area. In the main method            create an array of ten Square objects with sides that * have values of 1 through 10.            Display the values for each Square            */        private double sideLength;        private double area;            public double SideLength        {            get { return this.sideLength; }        }        public double Area        {            get { return this.area; }        }        public Square(double squareSideLength)        {            this.sideLength = squareSideLength;            this.area = ComputeArea();        }        private double ComputeArea()        {            return Math.Pow(this.sideLength, 2);        }    }}